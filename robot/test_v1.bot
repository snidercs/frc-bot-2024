---Main bot program.  Runs when in teleop mode.

local gamepad = require('gamepad')
local params  = require('params')
local robot   = require('robot')

-- Lifter state vars
local has_gone_up = false

-- Shooter state vars
local shoot_pressed = false
local shoot_released = false
local shoot_down = false
local intake_pressed = false
local intake_released = false
local intake_down = false

local function update_gamepad_state()
    shoot_pressed = gamepad.right_bumper_pressed()
    shoot_released = gamepad.right_bumper_released()
    shoot_down = gamepad.right_bumper()
    intake_pressed = gamepad.left_bumper_pressed()
    intake_released = gamepad.left_bumper_released()
    intake_down = gamepad.left_bumper()
end

local function update_arms()
    if gamepad.Y() then
        robot.raise_arms()
        has_gone_up = true
    elseif gamepad.A() then
        if has_gone_up then
            robot.lower_arms()
        end
    else
        robot.stop_lifter();
    end
end

local function update_shooter()
    if robot.shooting() or shoot_released then return end

    if intake_pressed or intake_released or intake_down then
        if intake_pressed or intake_down then
            robot.intake()
        else
            robot.stop_shooter()
        end
        return
    end

    if robot.intake_running() then
        return
    end

    if shoot_down or shoot_pressed then
        robot.shoot()
    end
end

--------------------------------------------------------------------------------
local function init()
    -- local team = config.get('team_name')
    -- print(team .. " ready to roll")
end

--------------------------------------------------------------------------------
local function teleop_prepare()
end

local function teleop_run()
    update_gamepad_state()
    robot.drive(params.speed() * (1.0 - params.brake()), params.rotation())
    update_arms()
    update_shooter()
end

local function teleop_cleanup()
end

return {
    init = init,
    prepare = teleop_prepare,
    run = teleop_run,
    cleanup = teleop_cleanup
}
